statements : newline* expression (newline+ expression)* newline*

expression : let variable assign expression
           | let variable assign at class_name
           : relational-expression ((and|or) relational-expression)*

relational-expression : not relational-expression 
                      : arithmatic-expression ((lt|gt|lte|gte|nte|e) arithmatic-expression)*

arithmatic-expression : term ((plus|minus) term)*

term : factor ((mul|div|modulo) factor)*

factor : (plus|minus) factor
       : power

power : call ( power factor)*

call : atom (lb (expression (comma expression)*)? rb)?

atom : int|float|string|variable|input-string|Mutstring
     : lp expression rp
     : log  expression (comma expression)*
     : if-statement
     : collection-statement
     : for-loop-statement
     : function-statement
     : delete variable (comma variable)*
     : use string
     : pop variable (ls key rs) ?
     : file-statement
     : switch-statement
     : class-statement
     : instantiation-statement

variable : variable (lsquare expression rsquare)*   
         | variable

collection-statement : lb (expression ( comma expression )*)? rb
                     | lb (expression colon expression (comma expression)*)? rb -> commented this implementations

if-statement : if lb expression rb colon expression ((elif lb expression rb colon expression)* (else expression)?)?
             : if lb expression rb colon lb statement rb ((elif lb expression rb colon lb statement rb)* (else colon lb statement rb)?)?

for-loop-statement : for variable lb (expression (comma expression )? ) rb colon expression
                    : for variable lb (expression (comma expression) ? ) rb colon lb statement rb

function-statement : variable fun lb ((variable ( comma variable)*)? rb colon expression
                   | variable fun lb ((variable (comma variable)*)? rb colon lb statement rb

file-statement : file (lt (w|a|r|w+|r+|a+) gt)? variable colon expression

switch-statement : switch (expression) lb newline* (( case expression colon statement )* (default colon statement)) newline+ rb

class-statement : class_name class lb statements rb 
